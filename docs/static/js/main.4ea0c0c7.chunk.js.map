{"version":3,"sources":["components/BudgetApp/expenses.jsx","components/BudgetApp/category.jsx","components/BudgetApp/static_data.js","components/BudgetApp/store.js","components/BudgetApp/categories.jsx","components/BudgetApp/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Expenses","props","index","label","value","updateCategory","updateValue","ExpensesContainer","placeholder","onChange","e","target","styled","div","attrs","className","React","memo","prev","Category","finePrint","data","category","sum","budget","expenses","status","CategoryContainer","readOnly","map","clearCategories","percent","initialState","takeHome","categories","Store","createContext","Provider","reducer","Consumer","state","action","type","c","categoryIndex","expenseIndex","reduce","Number","console","log","Error","Categories","dispatch","CategoriesContainer","i","BudgetApp","useReducer","totalBudgeted","diff","BudgetAppContainer","onClick","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAGA,SAASA,EAASC,GAAQ,IAElBC,EAKAD,EALAC,MACAC,EAIAF,EAJAE,MACAC,EAGAH,EAHAG,MACAC,EAEAJ,EAFAI,eACAC,EACAL,EADAK,YAGJ,OACI,eAACC,EAAD,WACI,uBAAOC,YAAc,OAASJ,MAAQD,GAAS,GAAKM,SAAW,SAACC,GAAQL,EAAe,CAAEH,QAAOC,MAAOO,EAAEC,OAAOP,WAChH,uBAAOI,YAAc,IAAMJ,MAAQA,GAAS,GAAKK,SAAW,SAACC,GAAQJ,EAAY,CAAEJ,QAAOE,MAAOM,EAAEC,OAAOP,cAKtH,IAAMG,EAAoBK,IAAOC,IAAIC,MAAM,CACvCC,UAAW,qBADWH,CAAH,KAMRI,MAAMC,KAAKjB,GAAU,SAACkB,EAAMjB,GACvC,OAASiB,EAAKf,QAAUF,EAAME,OAAae,EAAKd,QAAUH,EAAMG,S,glCCvBrD,SAASe,EAASlB,GAAQ,IAEjCmB,EAIAnB,EAJAmB,UACAf,EAGAJ,EAHAI,eACAC,EAEAL,EAFAK,YACAe,EACApB,EADAoB,KAIAC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,IACAC,EAEAH,EAFAG,OACAC,EACAJ,EADAI,SAGEC,EAASF,GAAUD,EAAM,OAAS,MAExC,OACI,eAACI,EAAD,WACI,6BAAML,IACN,sBAAKP,UAAY,SAAjB,cACI,wBACA,uBAAOP,YAAc,IAAMJ,MAAQoB,EAASI,UAAQ,OAExD,sBAAKb,UAAY,WAAjB,cACMU,EAASI,KAAK,SAACnB,EAAGR,GAAW,IACnBC,EAAiBO,EAAjBP,MAAOC,EAAUM,EAAVN,MAEf,OAAO,cAAC,EAAD,CACCD,MAAQA,EACRC,MAAQA,EACRF,MAAQA,EACRG,eAAiB,SAACH,EAAOC,GAAYE,EAAeH,EAAOC,IAC3DG,YAAc,SAACJ,EAAOE,GAAYE,EAAYJ,EAAOE,KALtD,UAAmBF,EAAnB,mBAQf,sBAAKa,UAAY,SAAjB,cACI,sCACA,sBAAKA,UAAY,SAAjB,eAAgCQ,QAEpC,sBAAKR,UAAY,SAAjB,cACI,iDACA,sBAAKA,UAAS,UAAMW,EAAN,WAAd,eAA0CF,EAASD,QAGvD,qBAAKR,UAAY,YAAjB,SACMK,OAMlB,IAAMO,EAAoBf,IAAOC,IAAIC,MAAM,CACvCC,UAAW,qBADWH,CAAH,K,cCxDjBkB,EAAkB,CACpB,CACIR,SAAU,cACVS,QAAS,GACTP,OAAQ,EACRD,IAAK,EACLE,SAAU,CACN,CACItB,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,KAInB,CACIkB,SAAU,cACVS,QAAS,GACTP,OAAQ,EACRD,IAAK,EACLE,SAAU,CACN,CACItB,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,KAInB,CACIkB,SAAU,gBACVS,QAAS,GACTP,OAAQ,EACRD,IAAK,EACLE,SAAU,CACN,CACItB,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,MAMjB4B,EAAe,CACjBC,SAAU,KACVb,UAAW,CACP,6HACA,uIACA,8EAEJc,WAAY,CACR,CACIZ,SAAU,cACVS,QAAS,GACTP,OAAQ,KACRD,IAAK,KACLE,SAAU,CACN,CACItB,MAAO,gBACPC,MAAO,KAEX,CACID,MAAO,qBACPC,MAAO,IAEX,CACID,MAAO,eACPC,MAAO,KAEX,CACID,MAAO,WACPC,MAAO,KAEX,CACID,MAAO,iBACPC,MAAO,KAEX,CACID,MAAO,QACPC,MAAO,IAEX,CACID,MAAO,kBACPC,MAAO,OAInB,CACIkB,SAAU,cACVS,QAAS,GACTP,OAAQ,KACRD,IAAK,KACLE,SAAU,CACN,CACItB,MAAO,oBACPC,MAAO,KAEX,CACID,MAAO,gBACPC,MAAO,KAE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","file":"static/js/main.4ea0c0c7.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nfunction Expenses(props) {\n    const {\n        index,\n        label,\n        value,\n        updateCategory,\n        updateValue,\n    } = props;\n\n    return (\n        <ExpensesContainer>\n            <input placeholder={ 'type' } value={ label || '' } onChange={ (e) => { updateCategory({ index, label: e.target.value }) } }/>\n            <input placeholder={ '$' } value={ value || '' } onChange={ (e) => { updateValue({ index, value: e.target.value }) } }/>\n        </ExpensesContainer>\n    );\n}\n\nconst ExpensesContainer = styled.div.attrs({\n    className: 'ExpensesContainer'\n})`\n    \n`;\n\nexport default React.memo(Expenses, (prev, props) => {\n    return ( prev.label === props.label ) && ( prev.value === props.value );\n});\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport Expenses from './expenses';\n\nexport default function Category(props) {\n    const {\n        finePrint,\n        updateCategory,\n        updateValue,\n        data,\n    } = props;\n\n    const {\n        category,\n        sum,\n        budget,\n        expenses\n    } = data;\n\n    const status = budget >= sum ? 'good' : 'bad';\n\n    return (\n        <CategoryContainer>\n            <h3>{ category }</h3>\n            <div className={ 'budget' }> {/* Percent / $ */}\n                <div /> \n                <input placeholder={ '$' } value={ budget } readOnly/>\n            </div>\n            <div className={ 'expenses' }> {/* Expenses / cost */}\n                { expenses.map( (e, index) => {\n                    const { label, value } = e;\n\n                    return <Expenses key={ `${index}-percent` }\n                            label={ label }\n                            value={ value }\n                            index={ index }\n                            updateCategory={ (index, label) => { updateCategory(index, label) } }\n                            updateValue={ (index, value) => { updateValue(index, value) } } />;\n                }) }     \n            </div>\n            <div className={ 'totals'}> {/* Label / Total */}\n                <div>Sum</div>\n                <div className={ 'amount' }>$ { sum }</div>\n            </div>\n            <div className={ 'totals'}> {/* Label / Total */}\n                <div>Left to budget</div>\n                <div className={ `${status} amount` }>$ { budget - sum }</div>\n            </div>\n  \n            <div className={ 'finePrint'}>\n                { finePrint }\n            </div>\n        </CategoryContainer>\n    );\n}\n\nconst CategoryContainer = styled.div.attrs({\n    className: 'CategoryContainer'\n})`\n    font-size: 16px;\n    border: 2px solid lightgrey;\n    border-radius: 4px;\n    padding: 1rem;\n\n    .budget{\n        display: grid;\n        gap: 1rem;\n        grid-template-columns: repeat(2, minmax(100px, 1fr));\n        justify-content: end;\n        & > * {\n            margin: 1rem 0;\n        }\n        input{\n            display: inline-block;\n        }\n    }\n\n    .expenses{\n        margin: 30px 0;\n        \n        & > div{\n            display: grid;\n            margin: 10px 0;\n            grid-template-columns: repeat(2, minmax(100px, 1fr));\n            gap: 1rem;\n            height: 30px;\n        }\n    }\n\n    .totals{\n        text-align: left;\n\n        display: grid;\n        grid-template-columns: repeat(2, minmax(100px, 1fr));\n\n        .good{\n            color: green;\n        }\n        .bad{\n            color: red;\n        }\n        .amount{\n            padding-left: 10px;\n        }\n    }\n\n    .finePrint{\n        font-size: 12px;\n        margin: 45px 0 0;\n    }\n`;","const clearCategories = [\n    {\n        category: 'Needs - 50%',\n        percent: 0.50,\n        budget: 0,\n        sum: 0,\n        expenses: [\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n        ]\n    },\n    {\n        category: 'Wants - 30%',\n        percent: 0.30,\n        budget: 0,\n        sum: 0,\n        expenses: [\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n        ]\n    },\n    {\n        category: 'Savings - 20%',\n        percent: 0.50,\n        budget: 0,\n        sum: 0,\n        expenses: [\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n            {\n                label: '',\n                value: 0,\n            },\n        ]\n    },\n];\n\nconst initialState = {\n    takeHome: 3500,\n    finePrint: [\n        '50% on things you need, necessary expenses like: mortgage or rent, utilities, health care, basic groceries, transportation',\n        '30% on things you want, additional expenses like: cable, internet, phone, dining out, entertainment, personal care, shopping, travel',\n        '20% on building wealth: emergency fund, retirement, savings, student loans'\n    ],\n    categories: [\n        {\n            category: 'Needs - 50%',\n            percent: 0.50,\n            budget: 1750,\n            sum: 1750,\n            expenses: [\n                {\n                    label: 'Housing: Rent',\n                    value: 900,\n                },\n                {\n                    label: 'Housing: Utilities',\n                    value: 40,\n                },\n                {\n                    label: 'Car: Payment',\n                    value: 300,\n                },\n                {\n                    label: 'Car: Gas',\n                    value: 150,\n                },\n                {\n                    label: 'Car: Insurance',\n                    value: 100,\n                },\n                {\n                    label: 'Phone',\n                    value: 60,\n                },\n                {\n                    label: 'Food: Groceries',\n                    value: 200,\n                },\n            ]\n        },\n        {\n            category: 'Wants - 30%',\n            percent: 0.30,\n            budget: 1050,\n            sum: 1050,\n            expenses: [\n                {\n                    label: 'Food: Restaurants',\n                    value: 200,\n                },\n                {\n                    label: 'Subscriptions',\n                    value: 100,\n                },\n                {\n                    label: 'Investment: Robinhood',\n                    value: 250,\n                },\n                {\n                    label: 'Investment: IRA',\n                    value: 500,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n            ]\n        },\n        {\n            category: 'Savings - 20%',\n            percent: 0.20,\n            budget: 700,\n            sum: 700,\n            expenses: [\n                {\n                    label: 'Emergency Fund',\n                    value: 500,\n                },\n                {\n                    label: 'Debt',\n                    value: 200,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n            ]\n        }\n    ]\n};\n\nexport { initialState as default, clearCategories };","import { createContext } from 'react';\nimport initialState, { clearCategories } from './static_data.js';\n\nconst Store = createContext(initialState);\nconst { Provider, Consumer } = Store;\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'UPDATE_TAKE_HOME':{\n            const takeHome = action.value;\n            const categories = [...state.categories].map( c =>{\n                const budget = takeHome * c.percent;\n                return {\n                    ...c,\n                    budget,\n                }\n            });\n\n            return {\n                ...state,\n                takeHome,\n                categories,\n            }\n        }\n        case 'UPDATE_CATEGORY_NAME':{\n            let {\n                categoryIndex,\n                expenseIndex,\n                label,\n            } = action;\n\n            let categories = [...state.categories];\n            categories[categoryIndex]['expenses'][expenseIndex] = {\n                ...categories[categoryIndex]['expenses'][expenseIndex],\n                label,\n            };\n\n            return {\n                ...state,\n                categories,\n            }\n        }\n        case 'UPDATE_CATEGORY_VALUE':{\n            let {\n                categoryIndex,\n                expenseIndex,\n                value,\n            } = action;\n\n            let categories = [...state.categories];\n            categories[categoryIndex]['expenses'][expenseIndex] = {\n                ...categories[categoryIndex]['expenses'][expenseIndex],\n                value,\n            };\n            \n            categories[categoryIndex]['sum'] = categories[categoryIndex]['expenses'].reduce((sum, e) =>{\n                return sum += Number(e.value);\n            }, 0)\n\n            return {\n                ...state,\n                categories,\n            }\n        }\n        case 'CLEAR_ALL':{\n            const categories = clearCategories.map( c =>{\n                const budget = state.takeHome * c.percent;\n                console.log(budget);\n                return {\n                    ...c,\n                    budget,\n                }\n            });\n\n            return {\n                ...state,\n                categories,\n            }\n        }\n        default:\n            throw new Error();\n    };\n};\n\nexport { reducer as default, Provider, Store };","import styled from 'styled-components';\n\nimport Category from './category.jsx';\nimport { Store } from './store';\n\nexport default function Categories({ dispatch }) {\n    const updateCategory = (data, categoryIndex) => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_CATEGORY_NAME\",\n\t\t    categoryIndex,\n            expenseIndex: data.index,\n            label: data.label,\n\t\t});\n    };\n\n    const updateValue = (data, categoryIndex) => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_CATEGORY_VALUE\",\n            categoryIndex,\n            expenseIndex: data.index,\n            value: data.value,\n\t\t});\n    };\n\n    return (\n        <Store.Consumer>\n            { ({state}) => {\n                return(\n                    <>\n                        <CategoriesContainer>\n                            { state.categories.map( (c, i) => (\n                                <Category \n                                    key={ `${i}-category` }\n                                    categoryIndex={ i }\n                                    updateCategory={ (data) => updateCategory(data, i) }\n                                    updateValue={ (data) => updateValue(data, i) }\n                                    data={ c }\n                                    finePrint={ state.finePrint[i] } />    \n                            ))}    \n                        </CategoriesContainer>\n                    </>\n                );\n            }\n}\n        </Store.Consumer>\n    );\n}\n\nconst CategoriesContainer = styled.div.attrs({\n    className: 'CategoriesContainer'\n})`\n    padding: 20px;\n    display: grid;\n    gap: 1rem;\n    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n`;\n","\nimport React, { useReducer } from 'react';\nimport styled from 'styled-components';\n\nimport Categories from './categories.jsx';\nimport initialState from './static_data.js';\nimport reducer, { Provider } from './store';\n\nexport default function BudgetApp() {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\tconst updateTakeHome = (e) => {\n\t\tconst value = e.target.value;\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_TAKE_HOME\",\n\t\t\tvalue,\n\t\t});\n\t};\n\n\tconst clearAll = () => {\n\t\tdispatch({\n            type: \"CLEAR_ALL\",\n        });\n\t};\n\t\t\n\tconst totalBudgeted = state.categories.reduce((sum, c) =>{\n\t\treturn sum += Number(c.sum);\n\t}, 0);\n\n\tconst diff = state.takeHome - totalBudgeted >= 0 ? 'good' : 'bad';\n\n\treturn (\n\t\t<Provider value={{ state, dispatch }}>\n\t\t\t<BudgetAppContainer>\n\t\t\t\t<h1>\n\t\t\t\tThe 50/30/20 Budget Guide\n\t\t\t\t</h1>\n\t\t\t\t<div className={ 'grid' }>\n\t\t\t\t\t<div>Take Home Money:</div>\n\t\t\t\t\t<div><input value={ state.takeHome } onChange={ updateTakeHome }/></div>\n\t\t\t\t\t<div>Total Budgetted:</div>\n\t\t\t\t\t<div>{ totalBudgeted }</div>\n\t\t\t\t\t<div className={ diff }>Left to budget:</div>\n\t\t\t\t\t<div>{ state.takeHome - totalBudgeted }</div>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={ clearAll }>Clear All Expenses</button>\n    \n\t\t\t\t<Categories dispatch={ dispatch }/>\n\t\t\t\t<div className={ 'disclaimer' }>Guideline from &nbsp; \n\t\t\t\t\t<a target={ '_blank' } href={ 'https://www.amazon.com/All-Your-Worth-Ultimate-Lifetime/dp/0743269888' }>\n\t\t\t\t\t\tAll Your Worth: The Ultimate Lifetime Money Plan \n\t\t\t\t\t</a>\n\t\t\t\t\t<p>Created by: Dinna Gonzales</p>\n\t\t\t\t\t<p>Contact: <a href={'mailto:dinnagonzales.05@gmail.com'}>\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</BudgetAppContainer>\n\t\t</Provider>\n\t);\n}\n\nconst BudgetAppContainer = styled.div.attrs({\n\tclassName: 'BudgetAppContainer'\n})`\n\tfont-size: 16px;\n\ttext-align: center;\n\tmax-width: 1000px;\n\tmargin: 0 auto;\n\tpadding: 25px;\n\n\t.grid{\n\t\tmargin: 0 auto;\n\t\ttext-align: right;\n\t\twidth: 350px;\n\t\tdisplay: grid;\n\t\tgap: 10px;\n        grid-template-columns: repeat(2, minmax(100px, 1fr));\n\n        .good{\n            color: green;\n        }\n        .bad{\n            color: red;\n\t\t}\n\n\t\tinput{\n\t\t\ttext-align: right;\n\t\t\tborder: 1px solid purple;\n\t\t\tborder-radius: 4px;\n\t\t\theight: 20px;\n\t\t}\n\t}\n\n\tbutton{\n\t\tmargin: 20px 0;\n\t}\n\n\t.disclaimer{\n\t\tmargin: 15px auto;\n\t\tp{\n\t\t\tfont-size: 12px;\n\t\t\tmargin: 10px 0;\n\t\t}\n\t}\n`;","import BudgetApp from './components/BudgetApp/index.jsx';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <BudgetApp />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}