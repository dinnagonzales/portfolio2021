{"version":3,"sources":["components/BudgetApp/static_data.js","components/BudgetApp/store.js","components/common/progress_bar.jsx","styles/default.js","images/sample.png","components/common/Modal.jsx","images/income-bg.png","styles/common.js","components/BudgetApp/faq.jsx","styles/media.js","utils.js","components/BudgetApp/income.jsx","components/BudgetApp/expense.jsx","components/common/CircularProgressWIthLabel.jsx","components/BudgetApp/category.jsx","components/BudgetApp/categories.jsx","components/BudgetApp/footer.jsx","components/BudgetApp/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["expenses","label","value","categories","type","category","color","percent","budget","sum","initialState","takeHome","faq","key","header","body","Context","createContext","BudgetReducer","state","action","map","c","categoryIndex","expenseIndex","reduce","e","Number","clearCategories","i","styled","div","attrs","className","colors","mojo","yellowOrange","goldenBell","sun","cornflowerBlue","cello","tropicalBlue","linkWater","bayOfMany","hawkesBlue","tanHide","lightGrey","abbey","white","theme","text","error","link","border","darkBackground","useStyles","makeStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Fade","React","forwardRef","props","ref","open","in","children","onEnter","onExited","other","style","useSpring","from","opacity","to","onStart","onRest","SpringModal","classes","useState","setOpen","buttonCopy","modalLabel","Button","variant","onClick","Modal","aria-label","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Section","section","FAQ","FAQContainer","target","href","ModalBody","list","l","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","Typography","src","sample","alt","img","formatDollarAmount","number","toFixed","replace","Income","useContext","dispatch","totalBudget","totalBudgeted","leftToBudget","Math","min","round","console","log","IncomeContainer","TextField","InputLabelProps","shrink","onChange","TableContainer","component","Paper","Table","TableBody","TableRow","TableCell","align","Expenses","index","updateCategory","updateValue","ExpensesContainer","memo","prev","CircularProgressWithLabel","Box","position","CircularProgress","top","left","bottom","right","Category","data","status","formattedBudget","progress","CategoryContainer","SummarySection","Categories","Consumer","CategoriesContainer","Footer","FooterContainer","footer","BudgetApp","useReducer","Provider","BudgetAppContainer","main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAMA,EAAW,CACb,CACIC,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,IAITC,EAAa,CACf,CACIC,KAAM,QACNC,SAAU,cACVC,MAAO,OACPC,QAAS,GACTC,OAAQ,EACRC,IAAK,GAET,CACIL,KAAM,QACNC,SAAU,cACVC,MAAO,aACPC,QAAS,GACTC,OAAQ,EACRC,IAAK,GAET,CACIL,KAAM,UACNC,SAAU,gBACVC,MAAO,iBACPC,QAAS,GACTC,OAAQ,EACRC,IAAK,IAIPC,EAAe,CACjBC,SAAU,IACVC,IAAK,CACD,CACIC,IAAK,gBACLC,OAAQ,0BACRC,KAAM,sGAEV,CACIF,IAAK,iBACLC,OAAQ,0BACRC,KAAM,gHAEV,CACIF,IAAK,iBACLC,OAAQ,0BACRC,KAAM,uDAGdZ,WAAY,CACR,CACIC,KAAM,QACNC,SAAU,cACVC,MAAO,OACPC,QAAS,GACTC,OAAQ,IACRC,IAAK,EACLT,SAAU,CACN,CACIC,MAAO,UACPC,MAAO,GAEX,CACID,MAAO,iBACPC,MAAO,GAEX,CACID,MAAO,YACPC,MAAO,GAEX,CACID,MAAO,YACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,KAInB,CACIE,KAAM,QACNC,SAAU,cACVC,MAAO,aACPC,QAAS,GACTC,OAAQ,KACRC,IAAK,EACLT,SAAU,CACN,CACIC,MAAO,aACPC,MAAO,GAEX,CACID,MAAO,eACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,KAInB,CACIE,KAAM,UACNC,SAAU,gBACVC,MAAO,iBACPC,QAAS,GACTC,OAAQ,IACRC,IAAK,EACLT,SAAU,CACN,CACIC,MAAO,UACPC,MAAO,GAEX,CACID,MAAO,wBACPC,MAAO,GAEX,CACID,MAAO,OACPC,MAAO,GAEX,CACID,MAAO,YACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,GAEX,CACID,MAAO,GACPC,MAAO,OCzLrBc,EAAUC,wBAAc,MAExBC,EAAgB,SAACC,EAAOC,GAC1B,OAAOA,EAAOhB,MACV,IAAK,mBACD,IAAMO,EAAWS,EAAOlB,MAClBC,EAAa,YAAIgB,EAAMhB,YAAYkB,KAAK,SAAAC,GAC1C,IAAMd,EAASG,EAAWW,EAAEf,QAC5B,OAAO,2BACAe,GADP,IAEId,cAIR,OAAO,2BACAW,GADP,IAEIR,WACAR,eAGR,IAAK,uBAAwB,IAErBoB,EAGAH,EAHAG,cACAC,EAEAJ,EAFAI,aACAvB,EACAmB,EADAnB,MAGAE,EAAU,YAAOgB,EAAMhB,YAM3B,OALAA,EAAWoB,GAAX,SAAsCC,GAAtC,2BACOrB,EAAWoB,GAAX,SAAsCC,IAD7C,IAEIvB,UAGG,2BACAkB,GADP,IAEIhB,eAGR,IAAK,wBAAyB,IAEtBoB,EAGAH,EAHAG,cACAC,EAEAJ,EAFAI,aACAtB,EACAkB,EADAlB,MAGAC,EAAU,YAAOgB,EAAMhB,YAU3B,OATAA,EAAWoB,GAAX,SAAsCC,GAAtC,2BACOrB,EAAWoB,GAAX,SAAsCC,IAD7C,IAEItB,UAGJC,EAAWoB,GAAX,IAAmCpB,EAAWoB,GAAX,SAAsCE,QAAO,SAAChB,EAAKiB,GAClF,OAAOjB,EAAOkB,OAAOD,EAAExB,SACxB,GAEI,2BACAiB,GADP,IAEIhB,eAGR,IAAK,YACD,IAAMyB,EAAkB,YAAKzB,GAAakB,KAAK,SAACC,EAAGO,GAC/C,IAAMrB,EAASW,EAAMR,SAAWW,EAAEf,QAElC,OAAO,2BACAe,GADP,IAEId,SACAR,SAAS,YAAKA,QAItB,OAAO,2BACAmB,GADP,IAEIhB,WAAYyB,IAGpB,QACI,OAAOlB,I,+UC5DUoB,IAAOC,IAAIC,MAAM,CAC7CC,UAAW,wBADiBH,CAAH,KAA1B,ICpBaI,EAAS,CAClBC,KAAM,UACNC,aAAc,UACdC,WAAY,UACZC,IAAK,UACLC,eAAgB,UAChBC,MAAO,UACPC,aAAa,UACbC,UAAU,UACVC,UAAW,UACXC,WAAY,UACZC,QAAS,UAETC,UAAW,UACXC,MAAO,UAEPC,MAAO,WAGEC,EAAQ,CACjBC,KAAMhB,EAAOa,MACbI,MAAOjB,EAAOC,KACdiB,KAAMlB,EAAOK,eACbc,OAAQnB,EAAOY,UACfQ,eAAgBpB,EAAOM,O,qDCxBZ,MAA0B,mC,2CCQnCe,EAAYC,aAAW,SAACP,GAAD,MAAY,CACvCQ,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBb,EAAMc,QAAQC,WAAWH,MAC1CR,OAAQ,iBACRY,UAAWhB,EAAMiB,QAAQ,GACzBC,QAASlB,EAAMmB,QAAQ,EAAG,EAAG,QAI3BC,EAAOC,IAAMC,YAAW,SAAcC,EAAOC,GAAM,IAC3CC,EAAgDF,EAApDG,GAAUC,EAA0CJ,EAA1CI,SAAUC,EAAgCL,EAAhCK,QAASC,EAAuBN,EAAvBM,SAAaC,EADI,YACMP,EADN,wCAEhDQ,EAAQC,oBAAU,CACtBC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAST,EAAO,EAAI,GAC1BW,QAAS,WACHX,GAAQG,GACVA,KAGJS,OAAQ,YACDZ,GAAQI,GACXA,OAKN,OACE,cAAC,WAAS/C,IAAV,yBAAc0C,IAAKA,EAAKO,MAAOA,GAAWD,GAA1C,aACGH,QAYQ,SAASW,EAAYf,GAChC,IAAMgB,EAAUjC,IADuB,EAEfe,IAAMmB,UAAS,GAFA,mBAEhCf,EAFgC,KAE1BgB,EAF0B,KAanCC,EAGAnB,EAHAmB,WACAC,EAEApB,EAFAoB,WACAhB,EACAJ,EADAI,SAGJ,OACA,gCACI,cAACiB,EAAA,EAAD,CAAQb,MAAO,CAAElB,gBAAiB,SAAUxD,MAAO,SAAWwF,QAAU,YAAcC,QAhBvE,WACnBL,GAAQ,IAeJ,SAA+GC,IAC/G,cAACK,EAAA,EAAD,CACIC,aAAaL,EACb3D,UAAWuD,EAAQ/B,MACnBiB,KAAMA,EACNwB,QAjBY,WACpBR,GAAQ,IAiBAS,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACXC,QAAS,KARjB,SAWI,cAAC,EAAD,CAAM5B,GAAID,EAAV,SACME,SCtFH,UAA0B,sC,uKCIlC,IAAM4B,EAAU1E,IAAO2E,QAAQzE,MAAM,CAC3CC,UAAW,iBADWH,CAAH,IAIFI,EAAOc,MACDC,EAAMI,Q,06BCGf,SAASqD,EAAIlC,GACxB,OACI,eAACmC,EAAD,WACI,sCAAQ,sBAAM1E,UAAY,QAAlB,gBAAR,IAA6C,sBAAMA,UAAY,SAAlB,gBAA7C,IAAmF,sBAAMA,UAAY,SAAlB,gBAAnF,aACA,uBAAMA,UAAY,2BAAlB,2FAGI,mBAAG2E,OAAS,SAAWC,KAAO,wEAA9B,8DAHJ,sCAQH,cAAC,EAAD,CAAO5G,MAAQ,gBAAkB0F,WAAa,aAA9C,SACO,eAACmB,EAAD,WACMtC,EAAMuC,KAAK1F,KAAI,SAAC2F,EAAGnF,GAAO,IACjBhB,EAAsBmG,EAAtBnG,IAAKC,EAAiBkG,EAAjBlG,OAAQC,EAASiG,EAATjG,KACpB,OACI,eAACkG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,WAAY,cAAC,IAAD,IACZC,gBAAA,eAAwB,EAAxB,aACAC,GAAE,eAAW,EAAX,YAHN,SAIMvG,IAEN,cAACwG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACMxG,QATd,UAAoBc,EAApB,YAAyBhB,OAejC,qBAAK2G,IAAMC,EAASC,IAAI,UAGhC,qBAAKF,IAAMG,EAAMD,IAAI,QAMjC,IAAMZ,EAAYhF,IAAOC,IAAIC,MAAM,CAClCC,UAAW,aADMH,CAAH,KAeT6E,EAAe7E,YAAO0E,GAASxE,MAAM,CAC1CC,UAAW,gBADSH,CAAH,IAgBNI,EAAOC,KAGPD,EAAOG,WAGPH,EAAOK,gBCrFnB,ICLaqF,EAAqB,SAACC,GAC/B,MAAM,KAAN,OAAYA,EAAOC,QAAQ,GAAGC,QAAQ,wBAAyB,O,qkBCwBpD,SAASC,KAAU,IAAD,EACDC,qBAAWjH,GAA/BG,EADqB,EACrBA,MAAO+G,EADc,EACdA,SAgBZC,EAAchH,EAAMhB,WAAWsB,QAAO,SAAChB,EAAKa,GACjD,OAAOb,EAAOkB,OAAOL,EAAEb,OACrB,GAEKE,EAAaQ,EAAbR,SAGFyH,EAAgBR,EAAmBO,GACnCE,EAAeT,EAAmBjH,EAAWwH,GAClCG,KAAKC,IAAI5H,EAAU2H,KAAKE,MAAqB,IAAdL,EAAmBxH,IAEnE,OADA8H,QAAQC,IAAIvH,GAEX,qCACC,cAACuF,EAAD,CAAKK,KAAO5F,EAAMP,MAClB,eAAC+H,GAAD,WACC,2CACA,sBAAK1G,UAAY,mBAAjB,UACC,cAAC2G,EAAA,EAAD,CAAWC,gBAAiB,CAC1BC,QAAQ,GAETzB,GAAE,kBACFpH,MAAQ,iBACRC,MAAQiB,EAAMR,UAAY,GAC1BoI,SArCkB,SAACrH,GACvB,IAAMxB,EAAQwB,EAAEkF,OAAO1G,MACvBgI,EAAS,CACR9H,KAAM,mBACNF,aAmCE,cAAC8I,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACC,eAACC,EAAA,EAAD,CAAOlD,aAAW,eAAlB,UAUC,cAACmD,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAWC,MAAM,OAAjB,6BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBnB,SAG3B,cAACgB,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAWC,MAAM,OAAjB,wBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBlB,cAM7B,cAACxC,EAAA,EAAD,CAAQC,QAAU,YAAcC,QAzDnB,WAChBmC,EAAS,CACC9H,KAAM,eAuDb,gCAOL,IAAMuI,GAAkB7G,YAAO0E,GAASxE,MAAM,CAC7CC,UAAW,mBADYH,CAAH,IAWVI,EAAOC,KAGPD,EAAOG,WAGPH,EAAOK,gB,gNCjHlB,SAASiH,GAAShF,GAAQ,IAElBpE,EAMAoE,EANApE,KACAqJ,EAKAjF,EALAiF,MACAxJ,EAIAuE,EAJAvE,MACAC,EAGAsE,EAHAtE,MACAwJ,EAEAlF,EAFAkF,eACAC,EACAnF,EADAmF,YAGJ,OACI,eAACC,GAAD,WACI,cAAChB,EAAA,EAAD,CAAWC,gBAAiB,CACpBC,QAAQ,GAEZzB,GAAE,UAAMjH,EAAN,YAAcqJ,EAAd,UACFxJ,MAAQ,cACRC,MAAQD,GAAS,GACjB8I,SAAW,SAACrH,GAAQgI,EAAe,CAAED,QAAOxJ,MAAOyB,EAAEkF,OAAO1G,WAEhE,cAAC0I,EAAA,EAAD,CAAWC,gBAAiB,CACpBC,QAAQ,GAEZzB,GAAE,UAAMjH,EAAN,YAAcqJ,EAAd,UACFxJ,MAAQ,IACRC,MAAQA,GAAS,GACjB6I,SAAW,SAACrH,GAAQiI,EAAY,CAAEF,QAAOvJ,MAAOwB,EAAEkF,OAAO1G,cAMzE,IAAM0J,GAAoB9H,IAAOC,IAAIC,MAAM,CACvCC,UAAW,qBADWH,CAAH,MAURwC,OAAMuF,KAAKL,IAAU,SAACM,EAAMtF,GACvC,OAASsF,EAAK7J,QAAUuE,EAAMvE,OAAa6J,EAAK5J,QAAUsE,EAAMtE,S,oBCzCrD,SAAS6J,GAA0BvF,GAAQ,IAC9CtE,EAAUsE,EAAVtE,MACR,OACI,eAAC8J,GAAA,EAAD,CAAKC,SAAW,WAAavG,QAAU,cAAvC,UACI,cAACwG,GAAA,EAAD,yBAAkBpE,QAAQ,eAAmBtB,GAA7C,IAAqDtE,MAAQA,KAC7D,cAAC8J,GAAA,EAAD,CACIG,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPL,SAAS,WACTvG,QAAQ,OACRC,WAAW,SACXC,eAAe,SARnB,SASI,cAAC2D,EAAA,EAAD,CAAYzB,QAAQ,UAAUmD,UAAU,MAAM3I,MAAM,gBAApD,mBACQgI,KAAKE,MAAMtI,GADnB,Y,62BCZD,SAASqK,GAAS/F,GAAQ,IAEjCkF,EAGAlF,EAHAkF,eACAC,EAEAnF,EAFAmF,YACAa,EACAhG,EADAgG,KAIAnK,EAMAmK,EANAnK,SACAD,EAKAoK,EALApK,KACAE,EAIAkK,EAJAlK,MACAG,EAGA+J,EAHA/J,IACAD,EAEAgK,EAFAhK,OACAR,EACAwK,EADAxK,SAGEyK,EAASjK,GAAUC,EAAM,OAAS,MAClCiK,EAAkB9C,EAAmBpH,GAErCmK,EAAWrC,KAAKC,IAAI/H,EAAQ8H,KAAKE,MAAa,IAAN/H,EAAWD,IAEnD6H,EAAeT,EAAmBpH,EAASC,GACnCmH,EAAmBnH,GAEjC,OACI,eAACmK,GAAD,WAEI,eAACC,GAAD,CAAgBvK,MAAQ4B,EAAO5B,GAA/B,UACI,gCACI,6BAAMD,IACN,4CAAgBqK,QAEpB,8BACI,cAACX,GAAD,CAA2B7J,MAAQyK,SAI3C,sBAAK1I,UAAY,qBAAjB,cACMjC,EAASqB,KAAK,SAACK,EAAG+H,GAAW,IACnBxJ,EAAiByB,EAAjBzB,MAAOC,EAAUwB,EAAVxB,MAEf,OAAO,cAAC,GAAD,CACCE,KAAOA,EACPH,MAAQA,EACRC,MAAQA,EACRuJ,MAAQA,EACRC,eAAiB,SAACD,EAAOxJ,GAAYyJ,EAAeD,EAAOxJ,IAC3D0J,YAAc,SAACF,EAAOvJ,GAAYyJ,EAAYF,EAAOvJ,KANtD,UAAmBuJ,EAAnB,gBAQX,sBAAKxH,UAAY,kBAAjB,UACI,sBAAKA,UAAYwI,EAAjB,UAAuC,SAAXA,EAAoB,KAAO,OAAvD,cACA,8BAAOpC,aAQ3B,IAAMuC,GAAoB9I,YAAO0E,GAASxE,MAAM,CAC5CC,UAAW,qBADWH,CAAH,KAmBFmB,EAAME,OAKrB0H,GAAiB/I,IAAOC,IAAIC,MAAM,CACpCC,UAAW,kBADQH,CAAH,MAUF,gBAAGxB,EAAH,EAAGA,MAAH,OAAeA,GAAgB4B,EAAOa,S,iQC/FzC,SAAS+H,KAAc,IAC1B5C,EAAaD,qBAAWjH,GAAxBkH,SAoBR,OACI,cAAClH,EAAQ+J,SAAT,UACM,YAAc,IAAZ5J,EAAW,EAAXA,MACA,OACI,mCACI,cAAC6J,GAAD,UACM7J,EAAMhB,WAAWkB,KAAK,SAACC,EAAGO,GAAJ,OACpB,cAAC0I,GAAD,CAEIhJ,cAAgBM,EAChB6H,eAAiB,SAACc,GAAD,OA5B1B,SAACA,EAAMjJ,GAChC2G,EAAS,CACR9H,KAAM,uBACHmB,gBACMC,aAAcgJ,EAAKf,MACnBxJ,MAAOuK,EAAKvK,QAuBuCyJ,CAAec,EAAM3I,IAChD8H,YAAc,SAACa,GAAD,OApB1B,SAACA,EAAMjJ,GAC7B2G,EAAS,CACR9H,KAAM,wBACGmB,gBACAC,aAAcgJ,EAAKf,MACnBvJ,MAAOsK,EAAKtK,QAeoCyJ,CAAYa,EAAM3I,IAC1C2I,KAAOlJ,GALX,UACaO,EADb,wBAgBhC,IAAMmJ,GAAsBlJ,IAAOC,IAAIC,MAAM,CACzCC,UAAW,uBADaH,CAAH,M,oSCzCV,SAASmJ,KAEvB,OACO,eAACC,GAAD,WACI,0EACI,mBAAGrE,KAAM,oCAAT,sBAIJ,mBAAGA,KAAK,yCAAR,sEAKZ,IAAMqE,GAAkBpJ,IAAOqJ,OAAOnJ,MAAM,CAC3CC,UAAW,mBADYH,CAAH,KAGImB,EAAMK,gB,gRCfhB,SAAS8H,KAAa,IAAD,EACTC,qBAAWnK,EAAeR,GADjB,mBAC5BS,EAD4B,KACrB+G,EADqB,KAGnC,OACC,eAAClH,EAAQsK,SAAT,CAAkBpL,MAAO,CAAEiB,QAAO+G,YAAlC,UACC,eAACqD,GAAD,WACC,cAACvD,GAAD,IACA,cAAC8C,GAAD,OAED,cAACG,GAAD,OAKH,IAAMM,GAAqBzJ,IAAO0J,KAAKxJ,MAAM,CAC5CC,UAAW,sBADeH,CAAH,KAaZmB,EAAMG,M,OC5BHqI,OARf,WACI,OACI,qBAAKxJ,UAAU,MAAf,SACI,cAACmJ,GAAD,OCOGM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1fe70495.chunk.js","sourcesContent":["const expenses = [\n    {\n        label: '',\n        value: 0,\n    },\n    {\n        label: '',\n        value: 0,\n    },\n    {\n        label: '',\n        value: 0,\n    },\n    {\n        label: '',\n        value: 0,\n    },\n    {\n        label: '',\n        value: 0,\n    },\n    {\n        label: '',\n        value: 0,\n    },\n    {\n        label: '',\n        value: 0,\n    },\n];\n\nconst categories = [\n    {\n        type: 'needs',\n        category: 'Needs - 50%',\n        color: 'mojo',\n        percent: 0.50,\n        budget: 0,\n        sum: 0,\n    },\n    {\n        type: 'wants',\n        category: 'Wants - 30%',\n        color: 'goldenBell',\n        percent: 0.30,\n        budget: 0,\n        sum: 0,\n    },\n    {\n        type: 'savings',\n        category: 'Savings - 20%',\n        color: 'cornflowerBlue',\n        percent: 0.20,\n        budget: 0,\n        sum: 0,\n    },\n];\n\nconst initialState = {\n    takeHome: 4000,\n    faq: [\n        { \n            key: 'fifty_percent',\n            header: '50% on things you need.',\n            body: 'Necessary expenses like: mortgage or rent, utilities, health care, basic groceries, transportation',\n        },\n        { \n            key: 'thirty_percent',\n            header: '30% on things you want.',\n            body: 'Additional expenses like: cable, internet, phone, dining out, entertainment, personal care, shopping, travel',\n        },\n        { \n            key: 'twenty_percent',\n            header: '20% on building wealth.',\n            body: 'Emergency fund, retirement, savings, student loans',\n        },\n    ],\n    categories: [\n        {\n            type: 'needs',\n            category: 'Needs - 50%',\n            color: 'mojo',\n            percent: 0.50,\n            budget: 2000,\n            sum: 0,\n            expenses: [\n                {\n                    label: 'Housing',\n                    value: 0,\n                },\n                {\n                    label: 'Transportation',\n                    value: 0,\n                },\n                {\n                    label: 'Groceries',\n                    value: 0,\n                },\n                {\n                    label: 'Insurance',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n            ]\n        },\n        {\n            type: 'wants',\n            category: 'Wants - 30%',\n            color: 'goldenBell',\n            percent: 0.30,\n            budget: 1200,\n            sum: 0,\n            expenses: [\n                {\n                    label: 'Dining Out',\n                    value: 0,\n                },\n                {\n                    label: 'Subscription',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n            ]\n        },\n        {\n            type: 'savings',\n            category: 'Savings - 20%',\n            color: 'cornflowerBlue',\n            percent: 0.2,\n            budget: 800,\n            sum: 0,\n            expenses: [\n                {\n                    label: 'Savings',\n                    value: 0,\n                },\n                {\n                    label: 'Sinking Funds: Travel',\n                    value: 0,\n                },\n                {\n                    label: 'Debt',\n                    value: 0,\n                },\n                {\n                    label: 'Insurance',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n                {\n                    label: '',\n                    value: 0,\n                },\n            ]\n        },\n    ]\n};\n\nexport { initialState as default, expenses, categories };","import { createContext } from 'react';\nimport initialState, { categories, expenses } from './static_data.js';\n\nconst Context = createContext(null);\n\nconst BudgetReducer = (state, action) => {\n    switch(action.type) {\n        case 'UPDATE_TAKE_HOME':{\n            const takeHome = action.value;\n            const categories = [...state.categories].map( c =>{\n                const budget = takeHome * c.percent;\n                return {\n                    ...c,\n                    budget,\n                }\n            });\n\n            return {\n                ...state,\n                takeHome,\n                categories,\n            }\n        }\n        case 'UPDATE_CATEGORY_NAME':{\n            let {\n                categoryIndex,\n                expenseIndex,\n                label,\n            } = action;\n\n            let categories = [...state.categories];\n            categories[categoryIndex]['expenses'][expenseIndex] = {\n                ...categories[categoryIndex]['expenses'][expenseIndex],\n                label,\n            };\n\n            return {\n                ...state,\n                categories,\n            }\n        }\n        case 'UPDATE_CATEGORY_VALUE':{\n            let {\n                categoryIndex,\n                expenseIndex,\n                value,\n            } = action;\n\n            let categories = [...state.categories];\n            categories[categoryIndex]['expenses'][expenseIndex] = {\n                ...categories[categoryIndex]['expenses'][expenseIndex],\n                value,\n            };\n            \n            categories[categoryIndex]['sum'] = categories[categoryIndex]['expenses'].reduce((sum, e) =>{\n                return sum += Number(e.value);\n            }, 0)\n\n            return {\n                ...state,\n                categories,\n            }\n        }\n        case 'CLEAR_ALL':{\n            const clearCategories = [ ...categories ].map( (c, i) =>{\n                const budget = state.takeHome * c.percent;\n\n                return {\n                    ...c,\n                    budget,\n                    expenses: [...expenses],\n                }\n            });\n\n            return {\n                ...state,\n                categories: clearCategories,\n            }\n        }\n        default:\n            return initialState;\n    };\n};\n\nexport { BudgetReducer as default, Context };","import styled from 'styled-components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function ProgressBar(props) {\n    const {\n        value,\n        min,\n        max\n    } = props;\n    \n\treturn (\n        <ProgressBarContainer>\n            <div className={ 'progress-labels' }>\n                <span className={ 'min' }>{ min }</span>\n                <span className={ 'max' }>{ max }</span>\n            </div>\n        </ProgressBarContainer>\n\t);\n}\n\nconst ProgressBarContainer = styled.div.attrs({\n\tclassName: 'ProgressBarContainer'\n})`\n\tpadding: 20px 0;\n\t.progress-labels{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr;\n\n\t\t.min{\n\t\t\ttext-align: left;\n\t\t}\n\t\t.max{\n\t\t\ttext-align: right;\n\t\t}\n\t}\n`;","export const colors = {\n    mojo: '#c84c42',\n    yellowOrange: '#ffb93f',\n    goldenBell: '#e2810e',\n    sun: '#FFA513',\n    cornflowerBlue: '#7499F1',\n    cello: '#233863',\n    tropicalBlue:'#B4C9F8',\n    linkWater:'#eaf3fa', \n    bayOfMany: '#2b468b',\n    hawkesBlue: '#d3e3fc',\n    tanHide: '#FA9746',\n    //Grey\n    lightGrey: '#d3d3d3',\n    abbey: '#555F61',\n    //White\n    white: '#ffffff',\n};\n\nexport const theme = {\n    text: colors.abbey,\n    error: colors.mojo,\n    link: colors.cornflowerBlue,\n    border: colors.lightGrey,\n    darkBackground: colors.cello,\n};","export default __webpack_public_path__ + \"static/media/sample.5ab26284.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n  const { in: open, children, onEnter, onExited, ...other } = props;\n  const style = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: open ? 1 : 0 },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    },\n  });\n\n  return (\n    <animated.div ref={ref} style={style} {...other}>\n      {children}\n    </animated.div>\n  );\n});\n\nFade.propTypes = {\n  children: PropTypes.element,\n  in: PropTypes.bool.isRequired,\n  onEnter: PropTypes.func,\n  onExited: PropTypes.func,\n};\n\nexport default function SpringModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n    setOpen(true);\n    };\n\n    const handleClose = () => {\n    setOpen(false);\n    };\n\n    const{\n        buttonCopy,\n        modalLabel,\n        children,\n    } = props;\n\n    return (\n    <div>\n        <Button style={{ backgroundColor: 'orange', color: 'white' }} variant={ 'contained' } onClick={ handleOpen }>{ buttonCopy }</Button>\n        <Modal\n            aria-label={ modalLabel }\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n                { children }\n            </Fade>\n        </Modal>\n    </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/income-bg.beab2a40.png\";","import styled from 'styled-components';\n\nimport { colors, theme } from './default.js';\n\nexport const Section = styled.section.attrs({\n\tclassName: 'GlobalSection'\n})`\n    border-radius: 20px;\n    background: ${colors.white};\n    border: 1px solid ${theme.border};\n    padding: 15px;\n`;","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport styled from 'styled-components';\nimport sample from '../../images/sample.png';\nimport Modal from '../common/Modal';\nimport img from '../../images/income-bg.png';\nimport { Section } from '../../styles/common';\nimport { colors } from '../../styles/default';\nexport default function FAQ(props) {\n    return (\n        <FAQContainer>\n            <h1>The <span className={ 'fifty'}>50</span>/<span className={ 'thirty'}>30</span>/<span className={ 'twenty'}>20</span> Budget</h1>\n            <span className={ 'FAQContainer-description' }>\n                Allocate spending according to this easy budgeting rule.\n                Based on the book&nbsp;\n                <a target={ '_blank' } href={ 'https://www.amazon.com/All-Your-Worth-Ultimate-Lifetime/dp/0743269888' }>\n                    All Your Worth: The Ultimate Lifetime Money Plan \n                </a>\n                &nbsp;by Senator Elizabeth Warren.\n            </span>\n        \t<Modal label={ 'Sample Budget' } buttonCopy={ 'Learn More' }>\n                <ModalBody>\n                    { props.list.map((l, i) => {\n                        const{ key, header, body } = l;\n                        return(\n                            <Accordion key={ `${i}_${key}` }>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                    aria-controls={ `panel${1}a-content` }\n                                    id={ `panel${1}a-header` }>\n                                    { header }\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        { body }\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        );\n                    }) }\n                    <img src={ sample } alt='' />\n                </ModalBody>\n\t\t\t</Modal>\n            <img src={ img } alt='' />    \n        \n        </FAQContainer>\n    );\n}\n\nconst ModalBody = styled.div.attrs({\n\tclassName: 'ModalBody'\n})`\n    padding: 15px;\n    width: 800px;\n    background: white;\n\n    img{\n        height: auto;\n        width: 100%;\n        max-width: 100%;\n        margin-top: 15px;\n        display: block;\n    }\n`;\nconst FAQContainer = styled(Section).attrs({\n\tclassName: 'FAQContainer'\n})`\n    text-align: left;\n\n    img{\n        height: auto;\n        width: 100%;\n        max-width: 100%;\n        margin-top: 15px;\n        display: block;\n    }\n\n\th1{\n\t\ttext-align: center;\n\t\t.fifty{\n\t\t\tcolor: ${colors.mojo};\n\t\t}\n\t\t.thirty{\n\t\t\tcolor: ${colors.goldenBell};\n\t\t}\n\t\t.twenty{\n\t\t\tcolor: ${colors.cornflowerBlue};\n\t\t}\n    }\n\n    .FAQContainer-description{\n        padding: 10px;\n        font-size: 13px;\n        display: block;\n        margin: 15px 0;\n        text-align: left;\n    }\n\n    button{\n        width: 150px;\n        display: block;\n        margin: 10px auto;\n    }\n`;","import { css } from 'styled-components';\n\n/*\n  ${media.mediumUp``};\n */\nconst media = {\n    small: (...args) => css`\n        @media (max-width: 767px) {\n        ${css(...args)};\n        }\n    `,\n    mediumDown: (...args) => css`\n        @media (max-width: 992px){\n        ${css(...args)};\n        }\n    `,\n    medium: (...args) => css`\n        @media (min-width: 768px) and (max-width: 992px) {\n        ${css(...args)};\n        }\n    `,\n    mediumUp: (...args) => css`\n        @media (min-width: 768px){\n        ${css(...args)};\n        }\n    `,\n    large: (...args) => css`\n        @media (min-width: 992px) and (max-width: 1200px) {\n        ${css(...args)};\n        }\n    `,\n    largeUp: (...args) => css`\n        @media (min-width: 992px){\n        ${css(...args)};\n        }\n    `,\n    xLargeUp: (...args) => css`\n        @media (min-width: 1200px) {\n          ${css(...args)};\n        }\n    `,\n};\n\nexport { media as default };","export const formatDollarAmount = (number) => {\n    return `$ ${number.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\n}","import React, { useContext } from 'react';\nimport { Context }  from './store';\nimport styled from 'styled-components';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ProgressBar from '../common/progress_bar';\nimport { colors } from '../../styles/default';\nimport FAQ from './faq';\n\nimport { Section } from '../../styles/common';\nimport media from '../../styles/media';\n\nimport { formatDollarAmount } from '../../utils';\n\nexport default function Income() {\n    const { state, dispatch } = useContext(Context);\n\n\tconst updateTakeHome = (e) => {\n\t\tconst value = e.target.value;\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_TAKE_HOME\",\n\t\t\tvalue,\n\t\t});\n\t};\n\n\tconst clearAll = () => {\n\t\tdispatch({\n            type: \"CLEAR_ALL\",\n        });\n\t};\n\t\t\n\tconst totalBudget = state.categories.reduce((sum, c) =>{\n\t\treturn sum += Number(c.sum);\n\t}, 0);\n\n\tconst { takeHome } = state;\n\tconst diff = takeHome - totalBudget >= 0 ? 'good' : 'bad';\n\n\tconst totalBudgeted = formatDollarAmount(totalBudget);\n\tconst leftToBudget = formatDollarAmount(takeHome - totalBudget);\n\tconst progress = Math.min(takeHome, Math.round((totalBudget * 100)/takeHome));\n\tconsole.log(state);\n\treturn (\n\t\t<>\n\t\t\t<FAQ list={ state.faq } />\n\t\t\t<IncomeContainer>\n\t\t\t\t<h2>My Budget</h2>\n\t\t\t\t<div className={ 'NumbersContainer' }>\n\t\t\t\t\t<TextField InputLabelProps={{\n\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tid={ `take_home_money` }\n\t\t\t\t\t\tlabel={ 'Monthly Income' }\n\t\t\t\t\t\tvalue={ state.takeHome || '' }\n\t\t\t\t\t\tonChange={ updateTakeHome } />\n\n\t\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t\t<Table aria-label=\"simple table\">\n\t\t\t\t\t\t\t{/* state.categories.map((c, i) => {\n\t\t\t\t\t\t\t\tconst { type, category, budget, color } = c;\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<TableRow key={ `${i}_${type} `}>\t\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\" style={{ color: color }}>{ category }</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{ budget }</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}) */}\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">Total Budgeted:</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{totalBudgeted}</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t<TableRow>\t\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">To Budget:</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{leftToBudget}</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\n\t\t\t\t\t<Button variant={ 'contained' } onClick={ clearAll }>Clear All</Button>\n\t\t\t\t</div>\n\t\t\t</IncomeContainer>\n\t\t</>\n\t);\n}\n\nconst IncomeContainer = styled(Section).attrs({\n\tclassName: 'IncomeContainer'\n})`\n\tmin-height: 300px;\n\ttext-align: right;\n\n\th2{\n\t\ttext-align: center;\n\t}\n\n\t.fifty{\n\t\tcolor: ${colors.mojo};\n\t}\n\t.thirty{\n\t\tcolor: ${colors.goldenBell};\n\t}\n\t.twenty{\n\t\tcolor: ${colors.cornflowerBlue};\n\t}\n\n\timg{\n        height: auto;\n        width: 100%;\n        max-width: 100%;\n        margin-top: 15px;\n        display: block;\n    }\n\n\t.NumbersContainer{\n\t\ttext-align: right;\n\t\tpadding: 15px;\n\n\t\t.MuiTableContainer-root{\n\t\t\tmargin-top: 30px;\n\t\t}\n\n\t\tbutton{\n\t\t\tmargin-top: 30px;\n\t\t}\n\t}\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\n\nfunction Expenses(props) {\n    const {\n        type,\n        index,\n        label,\n        value,\n        updateCategory,\n        updateValue,\n    } = props;\n    \n    return (\n        <ExpensesContainer>             \n            <TextField InputLabelProps={{\n                    shrink: true,\n                }}\n                id={ `${type}_${index}_label` }\n                label={ 'Description' }\n                value={ label || '' }\n                onChange={ (e) => { updateCategory({ index, label: e.target.value }) } } />\n\n            <TextField InputLabelProps={{\n                    shrink: true,\n                }}\n                id={ `${type}_${index}_value` }\n                label={ '$' }\n                value={ value || '' }\n                onChange={ (e) => { updateValue({ index, value: e.target.value }) } } />\n\n        </ExpensesContainer>\n    );\n}\n\nconst ExpensesContainer = styled.div.attrs({\n    className: 'ExpensesContainer'\n})`\n    display: grid;\n    margin: 10px 0;\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n    gap: 1rem;\n    height: 45px;\n`;\n\nexport default React.memo(Expenses, (prev, props) => {\n    return ( prev.label === props.label ) && ( prev.value === props.value );\n});\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function CircularProgressWithLabel(props) {\n    const { value } = props;\n    return (\n        <Box position={ 'relative' } display={ 'inline-flex' }>\n            <CircularProgress variant='determinate' { ...props } value={ value } />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position='absolute'\n                display='flex'\n                alignItems='center'\n                justifyContent='center' >\n                <Typography variant='caption' component='div' color='textSecondary'>\n                    {`${Math.round(value,)}%`}\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Expenses from './expense';\nimport CircularProgressWithLabel from '../common/CircularProgressWIthLabel';\nimport { formatDollarAmount } from '../../utils';\nimport { Section } from '../../styles/common';\nimport { colors, theme } from '../../styles/default';\n\nexport default function Category(props) {\n    const {\n        updateCategory,\n        updateValue,\n        data,\n    } = props;\n\n    const {\n        category,\n        type,\n        color,\n        sum,\n        budget,\n        expenses\n    } = data;\n\n    const status = budget >= sum ? 'good' : 'bad';\n    const formattedBudget = formatDollarAmount(budget);\n    \n    const progress = Math.min(budget, Math.round((sum * 100)/budget));\n    \n    const leftToBudget = formatDollarAmount(budget - sum);\n    const total = formatDollarAmount(sum);\n\n    return (\n        <CategoryContainer>\n\n            <SummarySection color={ colors[color] }>\n                <div>\n                    <h3>{ category }</h3>\n                    <span>Budget: { formattedBudget }</span>\n                </div>       \n                <div>\n                    <CircularProgressWithLabel value={ progress }/>\n                </div>   \n            </SummarySection>\n\n            <div className={ 'expenses-container' }> {/* Expenses / cost */}\n                { expenses.map( (e, index) => {\n                    const { label, value } = e;\n\n                    return <Expenses key={ `${index}-percent` }\n                            type={ type }\n                            label={ label }\n                            value={ value }\n                            index={ index }\n                            updateCategory={ (index, label) => { updateCategory(index, label) } }\n                            updateValue={ (index, value) => { updateValue(index, value) } } />;\n                }) }\n                <div className={ 'total-container' }>\n                    <div className={ status }>{ status === 'good' ? 'To' : 'Over' } Budget:</div>\n                    <div>{ leftToBudget }</div>\n                </div> \n            </div>\n\n        </CategoryContainer>\n    );\n}\n\nconst CategoryContainer = styled(Section).attrs({\n    className: 'CategoryContainer'\n})`\n    font-size: 16px;\n\n    .expenses-container{\n        margin: 30px 0;\n    }\n\n    .total-container{\n        font-weight: bold;\n        font-size: 20px;\n        margin: 30px 0 10px 0;\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 1rem;\n        text-align: left;\n\n        .bad{\n            color: ${theme.error};\n        }\n    }\n`;\n\nconst SummarySection = styled.div.attrs({\n    className: 'SummarySection'\n})`\n    margin-bottom: 0;\n    display: grid;\n    gap: 1rem;\n    grid-template-columns: 1fr 50px;\n    padding: 15px 0 0;\n\n    h3{\n        color: ${ ({ color }) => color ? color : colors.abbey };\n        margin: 10px 0;\n        text-align: left;\n        font-size: 30px;\n        line-height: 20px;\n    }\n\n    span{\n        font-weight: bold;\n        display: block;\n        text-align: left;\n    }\n`;","import React, { useContext, useReducer } from 'react';\nimport styled from 'styled-components';\n\nimport Category from './category.jsx';\nimport { Context } from './store';\n\nexport default function Categories() {\n    const { dispatch } = useContext(Context);\n\n    const updateCategory = (data, categoryIndex) => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_CATEGORY_NAME\",\n\t\t    categoryIndex,\n            expenseIndex: data.index,\n            label: data.label,\n\t\t});\n    };\n\n    const updateValue = (data, categoryIndex) => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_CATEGORY_VALUE\",\n            categoryIndex,\n            expenseIndex: data.index,\n            value: data.value,\n\t\t});\n    };\n\n    return (\n        <Context.Consumer>\n            { ({state}) => {\n                return(\n                    <>\n                        <CategoriesContainer>\n                            { state.categories.map( (c, i) => (\n                                <Category \n                                    key={ `${i}-category` }\n                                    categoryIndex={ i }\n                                    updateCategory={ (data) => updateCategory(data, i) }\n                                    updateValue={ (data) => updateValue(data, i) }\n                                    data={ c } />    \n                            ))}    \n                        </CategoriesContainer>\n                    </>\n                );\n            }\n}\n        </Context.Consumer>\n    );\n}\n\nconst CategoriesContainer = styled.div.attrs({\n    className: 'CategoriesContainer'\n})`\n    padding: 20px 0;\n    \n    grid-column-start: 1;\n    grid-column-end: 3;\n\n    display: grid;\n    gap: 1rem;\n    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n`;\n","import React, { useContext } from 'react';\nimport { Context }  from './store';\n\nimport styled from 'styled-components';\n\nimport { theme } from '../../styles/default';\nimport media from '../../styles/media';\n\n\nexport default function Footer() {\n\n\treturn (\n        <FooterContainer>\n            <p>Created by: Dinna Gonzales | Contact:&nbsp;\n                <a href={'mailto:dinnagonzales.05@gmail.com'}>\n                    Email\n                </a>\n            </p>\n            <a href=\"https://www.freepik.com/vectors/people\">People vector created by pch.vector - www.freepik.com</a>\n\t\t</FooterContainer>\n\t);\n}\n\nconst FooterContainer = styled.footer.attrs({\n\tclassName: 'FooterContainer'\n})`\n    background-color: ${ theme.darkBackground };\n    font-size: 12px;\n    text-align: center;\n    padding: 10px 0;\n    width: 100%;\n    margin-top: 15px;\n\n    p{\n        margin: 10px 0;\n    }\n    * {\n        color: white;\n    }\n`;","\nimport React, { useReducer } from 'react';\nimport styled from 'styled-components';\nimport IncomeSection from './income.jsx';\nimport Categories from './categories.jsx';\nimport initialState from './static_data.js';\nimport BudgetReducer, { Context } from './store';\n\nimport { theme } from '../../styles/default';\nimport Footer from './footer';\n\nexport default function BudgetApp() {\n\tconst [state, dispatch] = useReducer(BudgetReducer, initialState);\n\n\treturn (\n\t\t<Context.Provider value={{ state, dispatch }}>\n\t\t\t<BudgetAppContainer>\n\t\t\t\t<IncomeSection />\n\t\t\t\t<Categories />\n\t\t\t</BudgetAppContainer>\n\t\t\t<Footer />\n\t\t</Context.Provider>\n\t);\n}\n\nconst BudgetAppContainer = styled.main.attrs({\n\tclassName: 'BudgetAppContainer'\n})`\n\tfont-size: 16px;\n\ttext-align: center;\n\tmax-width: 1000px;\n\tmargin: 0 auto;\n\tpadding: 25px;\n\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr;\n\tgap: 15px;\n\ta{\n\t\tcolor: ${ theme.link };\n\t}\n`;","import BudgetApp from './components/BudgetApp/index.jsx';\nimport './App.css';\nfunction App() {\n    return (\n        <div className=\"app\">\n            <BudgetApp />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}